name: Build MagicSpells
# This action builds the project on all push events to main, adding of the
# "Build PR Jar" label to a PR, as well as PR synchronisation not from the
# same repo. When run on a PR, if it's labelled with "Build PR Jar", the
# action links the artifact download in a comment.
on:
  push:
    branches:
      - main
    paths-ignore:
      - factions/**
      - memory/**
      - shop/**
      - teams/**
      - towny/**
  pull_request:
    types:
      - labeled
      - synchronize
      - opened
      - reopened

jobs:
  build:
    name: Build
    if: |
      github.event_name == 'push' ||
      (github.event.action == 'labeled' && github.event.label.name == 'Build PR Jar') ||
      (github.event.action != 'labeled' && github.repository != github.event.pull_request.head.repo.full_name)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.sha || github.sha}}

      - name: Get commit hash
        id: hash
        run: echo "sha_short=$(git rev-parse --short ${{github.event.pull_request.head.sha || github.sha}})" >> $GITHUB_OUTPUT

      - name: Get version
        id: version
        run: echo "version=$(grep version gradle.properties | cut -d"=" -f2 | xargs)" >> $GITHUB_OUTPUT

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run build with Gradle Wrapper
        run: ./gradlew "-Pversion=${{steps.version.outputs.version}}-${{steps.hash.outputs.sha_short}}" core:build

      - name: Upload artifact
        if: github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'Build PR Jar')
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: MagicSpells
          if-no-files-found: error
          path: core/build/libs/MagicSpells*.jar

      - name: Link artifact
        if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Build PR Jar')
        uses: actions/github-script@v7
        with:
          script: |
            const owner = "${{github.event.repository.owner.login}}";
            const repo = "${{github.event.repository.name}}";
            
            const artifact_id = "${{steps.artifact.outputs.artifact-id}}";
            const artifact_url = `https://nightly.link/${owner}/${repo}/actions/artifacts/${artifact_id}.zip`;
            const artifact_name = `MagicSpells-${{steps.version.outputs.version}}-${{steps.hash.outputs.sha_short}}`;

            const marker = "<!-- bot: Build PR Jar -->";
            const body = `${marker}\nBuilt artifact: [\`${artifact_name}\`](${artifact_url})`;

            const issue_number = context.issue.number;
            const {data: comments} = await github.rest.issues.listComments({owner, repo, issue_number});
            const last_comment = comments.filter(c => c.body.includes(marker) && c.user.login === "github-actions[bot]")?.at(-1);
            
            if (last_comment) {
              await github.rest.issues.updateComment({owner, repo, body, comment_id: last_comment.id});
              core.info(`Updating comment at: ${last_comment.html_url}`);
              return;
            }
            const {data: html_url} = await github.rest.issues.createComment({issue_number, body, owner, repo});
            core.info(`Creating a comment at: ${html_url}`);
